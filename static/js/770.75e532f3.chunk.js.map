{"version":3,"file":"static/js/770.75e532f3.chunk.js","mappings":"6PAGaA,GAAQC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yQAcpBC,EAASJ,EAAAA,EAAAA,OAAaK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4ZAqBtBG,EAAQN,EAAAA,EAAAA,MAAYO,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gkBA8BpBK,GAAQR,EAAAA,EAAAA,GAAOS,EAAAA,GAAPT,CAAoBU,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,2KAY5BQ,GAAcX,EAAAA,EAAAA,GAAOY,EAAAA,GAAPZ,CAAaa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,+B,6BCpBxC,EApDkB,WAChB,IAAMW,GAAWC,EAAAA,EAAAA,MASXC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaG,WACpBC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,IAAIH,aAGxC,OACEI,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAXkB,CACpBP,MAAO,GACPE,SAAU,IAURM,SAhBiB,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UAC9BhB,GAASiB,EAAAA,EAAAA,IAAMH,IACfE,GACF,EAcIE,iBAAkBhB,EAAOiB,SAExB,SAAAC,GAAA,IAAGN,EAAMM,EAANN,OAAQO,EAAYD,EAAZC,aAAY,OACtBC,EAAAA,EAAAA,MAACrC,EAAK,CAAAkC,SAAA,EACJG,EAAAA,EAAAA,MAAC9B,EAAK,CAAC+B,KAAK,QAAOJ,SAAA,EACjBT,EAAAA,EAAAA,KAACc,EAAAA,IAAS,KACVd,EAAAA,EAAAA,KAACb,EAAW,CACV4B,KAAK,QACLF,KAAK,QACLG,MAAOZ,EAAOT,MACdsB,SAAUN,EACVO,YAAY,sBAEdlB,EAAAA,EAAAA,KAAChB,EAAK,CAAC6B,KAAK,QAAQM,UAAU,YAEhCP,EAAAA,EAAAA,MAAC9B,EAAK,CAAA2B,SAAA,EACJT,EAAAA,EAAAA,KAACoB,EAAAA,IAAkB,KACnBpB,EAAAA,EAAAA,KAACb,EAAW,CACV4B,KAAK,WACLF,KAAK,WACLG,MAAOZ,EAAOP,SACdoB,SAAUN,EACVO,YAAY,cAEdlB,EAAAA,EAAAA,KAAChB,EAAK,CAAC6B,KAAK,WAAWM,UAAU,YAEnCnB,EAAAA,EAAAA,KAACpB,EAAM,CAACmC,KAAK,SAAQN,SAAC,aAChB,GAIhB,ECxDe,SAASY,IACtB,OAAOrB,EAAAA,EAAAA,KAACsB,EAAS,GACnB,C","sources":["components/LogInForm/LogInForm.styled.jsx","components/LogInForm/LogInForm.jsx","Pages/Login/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const Forma = styled(Form)`\n  display: flex;\n  gap: 17px;\n  padding: 10px 20px;\n  border: 2px solid #0bc5ea;\n  border-radius: 6px;\n  max-width: 250px;\n  margin: 25px auto;\n  flex-direction: column;\n  @media (min-width: 768px) {\n    max-width: none;\n    width: 400px;\n  }\n`;\nexport const Button = styled.button`\n  display: flex;\n  padding: 10px 20px;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 6px;\n  border: 1px solid #0bc5ea;\n  background-color: #0bc5ea;\n  color: white;\n  font-size: 16px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-top: 5px;\n  &:hover {\n    color: #0bc5ea;\n    background-color: white;\n    cursor: pointer;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  position: relative;\n  padding: 10px 20px;\n  flex-direction: row;\n  align-items: center;\n  background-color: white;\n  color: #0bc5ea;\n  font-size: 16px;\n  font-weight: 400;\n  @media (min-width: 768px) {\n    font-size: 29px;\n  }\n  & input {\n    display: block;\n    border: 1px solid #0bc5ea;\n    border-radius: 6px;\n    min-width: 150px;\n    height: 25px;\n    @media (min-width: 768px) {\n      width: 100%;\n      height: 40px;\n      font-size: 16px;\n    }\n    @media (min-width: 1024px) {\n      font-size: 20px;\n    }\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  position: absolute;\n  top: 40px;\n  left: 23px;\n  color: red;\n  font-size: 12px;\n  @media (min-width: 768px) {\n    font-size: 14px;\n    top: 55px;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  margin-left: 5px;\n`;\n","import { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/userOperations';\nimport * as yup from 'yup';\nimport { Button, Error, Forma, Label, StyledField } from './LogInForm.styled';\nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { IoIosMail } from 'react-icons/io';\n\nconst LogInForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(logIn(values));\n    resetForm();\n  };\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n  const schema = yup.object().shape({\n    email: yup.string().required(),\n    password: yup.string().min(8).max(16).required(),\n  });\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      {({ values, handleChange }) => (\n        <Forma>\n          <Label name='email'>\n            <IoIosMail />\n            <StyledField\n              type='email'\n              name='email'\n              value={values.email}\n              onChange={handleChange}\n              placeholder='example@mail.com'\n            />\n            <Error name='email' component='div' />\n          </Label>\n          <Label>\n            <RiLockPasswordLine />\n            <StyledField\n              type='password'\n              name='password'\n              value={values.password}\n              onChange={handleChange}\n              placeholder='Password'\n            />\n            <Error name='password' component='div' />\n          </Label>\n          <Button type='submit'>Log In</Button>\n        </Forma>\n      )}\n    </Formik>\n  );\n};\n\nexport default LogInForm;\n","import LogInForm from '../../components/LogInForm';\n\nexport default function Register() {\n  return <LogInForm />;\n}\n"],"names":["Forma","styled","Form","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","Label","_templateObject3","Error","ErrorMessage","_templateObject4","StyledField","Field","_templateObject5","dispatch","useDispatch","schema","yup","shape","email","required","password","min","max","_jsx","Formik","initialValues","onSubmit","values","_ref","resetForm","logIn","validationSchema","children","_ref2","handleChange","_jsxs","name","IoIosMail","type","value","onChange","placeholder","component","RiLockPasswordLine","Register","LogInForm"],"sourceRoot":""}