{"version":3,"file":"static/js/633.dfeee675.chunk.js","mappings":"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","sources":["components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/App.styled.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","Pages/Phonebook/Phonebook.styled.jsx","Pages/Phonebook/Phonebook.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  display: flex;\n  padding: 5px 10px;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 6px;\n  border: 1px solid red;\n  background-color: white;\n  color: red;\n  font-size: 14px;\n  font-weight: 600;\n  text-transform: uppercase;\n  &:hover {\n    color: white;\n    background-color: red;\n    cursor: pointer;\n  }\n`;\n\nexport const Text = styled.p`\n  font-weight: 400;\n  font-size: 25px;\n  width: 33.33%;\n  &: nth-of-type(1) {\n    font-size: 22px;\n    word-wrap: break-word;\n  }\n  &: nth-of-type(2) {\n    font-size: 16px;\n  }\n`;\n\nexport const List = styled.ul`\n  width: 100%;\n  margin: 0 auto;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n  & li {\n    display: flex;\n    height: 60px;\n    align-items: center;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n    text-align: center;\n    &: nth-of-type(even) {\n      background-color: #0bc5ea0f;\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Button, Text, List } from './Contacts.styled';\nimport { getContacts, getFilter } from '../../redux/selectors';\nimport { deleteContact } from '../../redux/contactsOperations';\n\nconst Contacts = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  if (filteredContacts.length !== 0) {\n    return (\n      <List>\n        {filteredContacts.map(({ name, number, id }) => (\n          <li key={name}>\n            <Text>{name}</Text>\n            <Text>{number}</Text>\n            <Button type='button' onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </Button>\n          </li>\n        ))}\n      </List>\n    );\n  }\n};\n\nexport default Contacts;\n","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h1`\n  text-align: center;\n`\nexport const Title2 = styled.h2`\n  text-align: center;\n`","import styled from '@emotion/styled';\nimport { Form, ErrorMessage } from 'formik';\n\nexport const Error = styled(ErrorMessage)`\n  position: absolute;\n  top: 40px;\n  left: 54px;\n  color: red;\n  font-size: 12px;\n  @media (min-width: 768px) {\n    font-size: 14px;\n    top: 55px;\n  }\n`;\n\nexport const Forma = styled(Form)`\n  display: flex;\n  gap: 20px;\n  padding: 10px 20px;\n  flex-direction: column;\n  align-items: stretch;\n  border: 2px solid #0bc5ea;\n  border-radius: 6px;\n  max-width: 250px;\n  justify-content: center;\n  margin: 0 auto;\n  @media (min-width: 768px) {\n    max-width: none;\n    width: 400px;\n  }\n`;\nexport const Button = styled.button`\n  display: flex;\n  padding: 10px 20px;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 6px;\n  border: 1px solid #0bc5ea;\n  background-color: #0bc5ea;\n  color: white;\n  font-size: 16px;\n  font-weight: 600;\n  text-transform: uppercase;\n  &:hover {\n    color: #0bc5ea;\n    background-color: white;\n    cursor: pointer;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  position: relative;\n  padding: 10px 20px;\n  flex-direction: row;\n  align-items: center;\n  background-color: white;\n  color: #0bc5ea;\n  font-size: 16px;\n  font-weight: 400;\n  @media (min-width: 768px) {\n    font-size: 29px;\n  }\n  & input {\n    display: block;\n    border: 1px solid #0bc5ea;\n    border-radius: 6px;\n    min-width: 150px;\n    height: 25px;\n    margin-left: 5px;\n    @media (min-width: 768px) {\n      width: 100%;\n      height: 40px;\n      font-size: 16px;\n    }\n    @media (min-width: 1024px) {\n      font-size: 20px;\n    }\n  }\n`;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport { Forma, Button, Label, Error } from './Form.styled';\nimport { Formik, Field } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contactsOperations';\nimport { RiContactsBook2Fill } from 'react-icons/ri';\nimport { FaPhoneAlt } from 'react-icons/fa';\n\nconst nameId = nanoid();\nconst telId = nanoid();\nconst initialValues = {\n  name: '',\n  number: '',\n};\nconst schema = yup.object().shape({\n  name: yup.string().max(16).required(),\n  number: yup.string().min(3).max(16).required(),\n});\n\nconst Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const handleSubmit = (values, { resetForm }) => {\n    const contactNames = contacts.map(contact => contact.name);\n    contactNames.includes(values.name)\n      ? alert(`${values.name} is already in contacts.`)\n      : dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <Forma>\n        <Label htmlFor={nameId}>\n          <RiContactsBook2Fill />\n          <Field\n            type='text'\n            name='name'\n            id={nameId}\n            placeholder={'Enter name'}\n          />\n          <Error name='name' component='div' />\n        </Label>\n        <Label htmlFor={telId}>\n          <FaPhoneAlt />\n          <Field\n            type='tel'\n            name='number'\n            id={telId}\n            placeholder={'Enter phone number'}\n          />\n          <Error name='number' component='div' />\n        </Label>\n        <Button type='submit'>Add contact</Button>\n      </Forma>\n    </Formik>\n  );\n};\n\nexport default Form;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  padding: 10px 20px;\n  justify-content: center;\n  flex-direction: row;\n  align-items: center;\n  background-color: white;\n  color: #0bc5ea;\n  font-size: 16px;\n  font-weight: 400;\n  text-transform: uppercase;\n  @media (min-width: 768px) {\n    font-size: 29px;\n  }\n  & input {\n    display: block;\n    border: 1px solid #0bc5ea;\n    border-radius: 6px;\n    min-width: 150px;\n    height: 25px;\n    @media (min-width: 768px) {\n      min-width: none;\n      width: 400px;\n      height: 40px;\n      font-size: 16px;\n    }\n    @media (min-width: 1024px) {\n      font-size: 20px;\n    }\n  }\n`;\n","import { Label } from './Filter.styled';\nimport { changeValue } from '../../redux/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/selectors';\nimport { MdPersonSearch } from 'react-icons/md';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(getFilter);\n  return (\n    <Label htmlFor=''>\n      <MdPersonSearch />\n      <input\n        type='text'\n        name='filter'\n        value={filterValue}\n        onChange={e => dispatch(changeValue(e.currentTarget.value))}\n        placeholder='Search contacts...'\n      />\n    </Label>\n  );\n};\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const FormCover = styled.div`\n  width: 100%;\n  & h1,\n  & h2 {\n    text-transform: uppercase;\n    font-size: 20px;\n  }\n`;\n","import Contacts from '../../components/Contacts';\nimport { Title, Title2 } from 'components/App.styled';\nimport Form from 'components/Form';\nimport Filter from 'components/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getIsLoading, getError } from '../../redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/contactsOperations';\nimport { BeatLoader } from 'react-spinners';\nimport { FormCover } from './Phonebook.styled';\n\nexport default function Phonebook() {\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <FormCover>\n        <Title>New Contact</Title>\n        <Form />\n      </FormCover>\n      <FormCover>\n        <Title2>Contacts</Title2>\n        <Filter />\n        {isLoading && !error && <BeatLoader color='#0bc5ea' />}\n        <Contacts />\n      </FormCover>\n    </>\n  );\n}\n"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","Text","_templateObject2","List","_templateObject3","contacts","useSelector","getContacts","filter","getFilter","dispatch","useDispatch","filteredContacts","contact","name","toLowerCase","includes","length","_jsx","children","map","_ref","number","id","_jsxs","type","onClick","deleteContact","Title","Title2","Error","ErrorMessage","Forma","Form","Label","_templateObject4","nameId","nanoid","telId","initialValues","schema","yup","shape","max","required","min","state","items","Formik","onSubmit","values","resetForm","alert","concat","addContact","validationSchema","htmlFor","RiContactsBook2Fill","Field","placeholder","component","FaPhoneAlt","filterValue","MdPersonSearch","value","onChange","e","changeValue","currentTarget","FormCover","Phonebook","isLoading","getIsLoading","error","getError","useEffect","fetchContacts","_Fragment","Filter","BeatLoader","color","Contacts"],"sourceRoot":""}